// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package postgres

import (
	"database/sql"
	"fmt"
	"time"
)

type GenderEnum string

const (
	GenderEnumMale   GenderEnum = "male"
	GenderEnumFemale GenderEnum = "female"
)

func (e *GenderEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = GenderEnum(s)
	case string:
		*e = GenderEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for GenderEnum: %T", src)
	}
	return nil
}

type RoleEnum string

const (
	RoleEnumEmployee RoleEnum = "employee"
	RoleEnumCustomer RoleEnum = "customer"
	RoleEnumAdmin    RoleEnum = "admin"
)

func (e *RoleEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = RoleEnum(s)
	case string:
		*e = RoleEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for RoleEnum: %T", src)
	}
	return nil
}

type User struct {
	ID        int64        `json:"id"`
	Username  string       `json:"username"`
	Password  string       `json:"password"`
	Avatar    string       `json:"avatar"`
	Email     string       `json:"email"`
	CreatedAt time.Time    `json:"created_at"`
	UpdatedAt time.Time    `json:"updated_at"`
	DeletedAt sql.NullTime `json:"deleted_at"`
	Gender    GenderEnum   `json:"gender"`
	Role      RoleEnum     `json:"role"`
}
